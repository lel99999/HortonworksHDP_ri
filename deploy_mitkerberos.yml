---
- hosts: mit01
  name: provision and install kerberos
  tasks:
    - name: install libselinux-python
      become: yes
      become_method: sudo
      yum:
        name: libselinux-python
        state: present
   
    - name: install ntp
      become: yes
      become_method: sudo
      yum:
        name: ntp
        state: present
    - name: ensure ntp always started
      become: yes
      become_method: sudo
      command: chkconfig ntpd on

    - name: set local ntp server
      become: yes
      become_method: sudo
      lineinfile:
        dest: /etc/ntp.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: 'server 0.centos.pool.ntp.org iburst', line: '#server 0.centos.pool.ntp.org iburst' }
        - { regexp: 'server 1.centos.pool.ntp.org iburst', line: '#server 1.centos.pool.ntp.org iburst' }
        - { regexp: 'server 2.centos.pool.ntp.org iburst', line: '#server 2.centos.pool.ntp.org iburst' }
        - { regexp: 'server 3.centos.pool.ntp.org iburst', line: '#server 3.centos.pool.ntp.org iburst' }
    - name: set local ntp server
      become: yes
      become_method: sudo
      lineinfile:
        dest: /etc/ntp.conf
        regexp: '^#server 0.centos.pool.ntp.org iburst'
        insertbefore: '#server 0.centos.pool.ntp.org iburst'
        line: server ambari.hdpdev.com iburst
    - name: start ntp service
      become: yes
      become_method: sudo
      service:
        name: ntpd
        state: restarted
    - name: install Net-tools
      become: yes
      become_method: sudo
      yum:
        name: net-tools
  	state: present 
    - name: install MIT Kerberos
      become: yes
      become_method: sudo
      yum:
        name: "{{ item }}"
      with_items:
        - krb5-server
        - krb5-libs
        - krb5-workstation
#       - krb5-auth-dialog
    - name: addresss localhost issue
      become: yes
      become_method: sudo
      replace:
        dest: /etc/hosts
#       path: /etc/hosts    #Only good for Ansible > 2.3, use dest= for Ansible < 2.3
        regexp: '^127\.0\.0\.1'
        replace: '#127.0.0.1'

    - name: update default_realm 1
      become: yes
      become_method: sudo 
      replace:
        dest: /etc/krb5.conf
        regexp: 'default_realm = EXAMPLE.COM'
        replace: 'default_realm = HDPDEV.COM'
#   - name: update default_realm 2
#     become: yes
#     become_method: sudo 
#     replace:
#       dest: /etc/krb5.conf
#       regexp: '.default_realm = EXAMPLE.COM'
#       replace: '.default_realm = HDPDEV.COM'
    - name: update domain kdc
      become: yes
      become_method: sudo 
      replace:
        dest: /etc/krb5.conf
        regexp: 'kdc = kerberos.example.com'
        replace: 'kdc = mit01.hdpdev.com'
    - name: update domain admin_server
      become: yes
      become_method: sudo 
      replace:
        dest: /etc/krb5.conf
        regexp: 'admin_server = kerberos.example.com'
        replace: 'admin_server = mit01.hdpdev.com'
    - name: update domain initialization1
      become: yes
      become_method: sudo 
      replace:
        dest: /etc/krb5.conf
        regexp: 'example.com = EXAMPLE.COM'
        replace: 'hdpdev.com = HDPDEV.COM'
    - name: update domain initialization2
      become: yes
      become_method: sudo 
      replace:
        dest: /etc/krb5.conf
        regexp: '.example.com = EXAMPLE.COM'
        replace: '.hdpdev.com = HDPDEV.COM'
    - name: update domain
      become: yes
      become_method: sudo 
      replace:
        dest: /etc/krb5.conf
        regexp: 'EXAMPLE.COM'
        replace: 'HDPDEV.COM'

    - name: update kdc.conf
      become: yes
      become_method: sudo 
      replace:
        dest: /var/kerberos/krb5kdc/kdc.conf
        regexp: 'EXAMPLE.COM'
        replace: 'HDPDEV.COM'
    - name: update kadm5.acl
      become: yes
      become_method: sudo 
      replace:
        dest: /var/kerberos/krb5kdc/kadm5.acl
        regexp: '@EXAMPLE.COM'
        replace: '@HDPDEV.COM'
    - name: check init entropy
      become: yes
      become_method: sudo
      shell: cat /proc/sys/kernel/random/entropy_avail
      register: entropy_avail
    - debug: var entropy_avail.stdout_lines
    - name: check system entropy (random number generation for cryptographic randomness)
      become: yes
      become_method: sudo
      yum:
        name: haveged
        state: present
    - name: check post-haveged entropy
      become: yes
      become_method: sudo
      shell: cat /proc/sys/kernel/random/entropy_avail
      register: postentropy_avail
    - debug: var postentropy_avail.stdout_lines
    - name: create KDC database
      become: yes
      become_method: sudo
#     shell: echo -e "P@ssw0rd\nP@ssw0rd" | kdb5_util -r HDPDEV.COM create -s
      shell: echo -e "P@ssw0rd\nP@ssw0rd" | kdb5_util create -s
      register: kdb5_create
    - debug: var=kdb5_create.stdout_lines
    - name: start krb5kdc service
      become: yes
      become_method: sudo
      service:
        name: krb5kdc
        state: started
    - name: start kadmin service
      become: yes
      become_method: sudo
      service:
        name: kadmin
        state: started

    - name: stop iptables
      become: yes
      become_method: sudo
      service:
        name: iptables
        state: stop

    - name: disable iptables
      become: yes
      become_method: sudo
      shell: chkconfig iptables off

    - name: disable selinux
      become: yes
      become_method: sudo
      lineinfile:
        dest: /etc/sysconfig/selinux
        regexp: '^SELINUX=permissive'
        line: 'SELINUX=disabled'

